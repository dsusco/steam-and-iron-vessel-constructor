import{A as R,u as b,d as E,W as g,F as w,E as S,H as x,S as T,e as _,n as k}from"./weapon-offensive-potential-e6206dbb.js";import{d as i,w as A,s as G,e as O,y as N}from"./index-1f403647.js";const m={Colossal:{Aeronef:{maximumEngineRating:6},Aquanef:{maximumEngineRating:6},Ironclad:{maximumEngineRating:6}},"Small Craft":{Aeroplanes:{maximumEngineRating:12},Aquacraft:{maximumEngineRating:9},Contraptions:{maximumEngineRating:9}}},j={Ready:{nextCondition:"Damaged"},Damaged:{nextCondition:"Crippled",prevCondition:"Ready"},Crippled:{prevCondition:"Damaged"}};function F(e){const n=i(null),s=i(null),a=i(null),t=i(null),u=i(null),r=i(null);return A(()=>{n.value=Object.keys(m).find(l=>Object.keys(m[l]).includes(e.value)),s.value=n.value==="Colossal",a.value=n.value==="Small Craft",t.value=e.value==="Aeronef"||e.value==="Small Craft",u.value=e.value==="Aquanef"||e.value==="Aquacraft",r.value=e.value==="Ironclad"||e.value==="Contraptions"}),{classification:n,isColossal:s,isSmallCraft:a,isAerovessel:t,isAquavessel:u,isTerravessel:r}}function p(e,n){const s=i(null);return A(()=>{const a=Math.ceil(e.value/3),t=Math.ceil((e.value-a)/2),u=e.value-a-t;s.value={Ready:a,Damaged:t,Crippled:u}}),{hullCheckboxes:s}}function H(e,n,s,a,t,u){const r=i(null),{isColossal:l,isSmallCraft:d}=F(e),{hullCheckboxes:f}=p(n);function o(c,v){return+c*6/(6-R.indexOf(v))}return A(()=>{l.value?r.value=Object.entries(s.value).reduce((c,[v,C])=>c+o(f.value[v],C.armorRating),0):d.value?r.value=o(a.value,t.value):r.value=0}),{defensiveRating:r}}const M={Forward:3,"Astarboard Forward":3,"Aport Forward":3,"Astarboard Aft":2,"Aport Aft":2,Aft:1,Above:.5,Below:.5};function L(e,n,s){const a=i(null),{weapons:t}=G(b());function u(l,d,f){return Object.entries(s.value).reduce((o,[c,v])=>g[d.type].firingArcs.reduce((C,h)=>C+l.value[c]/e.value*v.firingArcs[f][h]*M[h],o),0)}function r(l,[d,f]){const o=t.value[f.weaponId];if(!o)return l;const{hullCheckboxes:c}=p(e),{weaponOffensivePotential:v}=E(O(o,"rangeBands"),O(o,"eccentricities"));return l+v.value*u(c,o,d)}return A(()=>{a.value=+Object.entries(n.value).reduce(r,0).toFixed(3)}),{offensiveRating:a}}const I=["A","B","C"];class y{constructor(){this.weaponId=""}}class D{constructor(){Object.keys(g).reduce((n,s)=>n.concat(g[s].firingArcs),[]).forEach(n=>this[n]=w[0])}}class B{constructor(){this.engineRating=S[0],this.armorRating=R[0],this.firingArcs=I.reduce((n,s)=>(n[s]=new D,n),{})}}class U{constructor(n="",s=Object.keys(m[Object.keys(m)[0]])[0]){this.class=`${n}`,this.type=`${s}`,this.eccentricities=[],this.batteries=I.reduce((a,t)=>(a[t]=new y,a),{}),this.hullRating=x[0],this.conditions=Object.keys(j).reduce((a,t)=>(a[t]=new B,a),{}),this.sizeCheckboxes=T[0],this.engineRating=S[0],this.armorRating=R[0]}}const P=N("vesselStore",()=>{const e=i(_("vesselStore",{}));function n(){const a=k();return e.value[a]=new U,a}function s(a){return delete e.value[a]}return{vessels:e,addVessel:n,removeVessel:s}});export{m as C,H as a,p as b,L as c,j as d,P as e,F as u};
